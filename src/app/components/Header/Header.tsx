'use client'

import React, { ReactNode, useEffect, useState } from 'react';
import style from './Header.module.css';
import Button from '../Button/Button';



interface HeaderProps {
  children?: ReactNode;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
function toggleTheme(setCurrentTheme: React.Dispatch<React.SetStateAction<string>>): void {
  const htmlElement = document.documentElement;

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é —Ç–µ–º—É –∏ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º
  if (htmlElement.getAttribute('data-theme') === 'dark') {
    htmlElement.removeAttribute('data-theme');
    localStorage.setItem('theme', 'light'); // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–≤–µ—Ç–ª—É—é —Ç–µ–º—É
    setCurrentTheme('light'); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–µ–º—ã
  } else {
    htmlElement.setAttribute('data-theme', 'dark');
    localStorage.setItem('theme', 'dark'); // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–º–Ω—É—é —Ç–µ–º—É
    setCurrentTheme('dark'); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–µ–º—ã
  }
}

const Header: React.FC<HeaderProps> = ({
    children = <h1 className='text-center'>Header</h1>
 }) => {
  
  const [currentTheme, setCurrentTheme] = useState<string>('light'); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Ç–µ–º—ã

  useEffect(() => {
    // –ü—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Ç–µ–º—É
    const savedTheme = localStorage.getItem('theme');
    if (savedTheme) {
      document.documentElement.setAttribute('data-theme', savedTheme);
      setCurrentTheme(savedTheme); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π —Ç–µ–º—ã
    }
  }, []);

  return (
    <div className={style.container}>
      <header className={style.Header}>
        {/* Theme butoon */}
        <Button 
          size='small'
          onClick={() => toggleTheme(setCurrentTheme)}
        >
          {currentTheme === 'dark' ? 'üåô' : '‚òÄÔ∏è'} {/* –°–æ–ª–Ω—Ü–µ –∏–ª–∏ –ª—É–Ω–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–º—ã */}
        </Button>

        <div className={style.childrenContainer}>
          {children}
        </div>
      </header>
    </div>
  );
};

export default Header;