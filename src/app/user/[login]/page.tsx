"use client";

import { useEffect, useState } from "react";
import { useParams, useRouter } from "next/navigation";
import { fetchUserProfile } from "@/lib/userApi"; // API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
import { Message } from "@/types/message";
import styles from "./UserProfile.module.css";

interface UserProfile {
  userLogin: string;
  userEmail: string;
  messages: Message[];
}

const UserPage = () => {
  const params = useParams(); // ‚úÖ –ü–æ–ª—É—á–∞–µ–º `params` –∫–∞–∫ Promise
  const login = params?.login as string; // ‚úÖ –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º login
  const router = useRouter();
  const [user, setUser] = useState<UserProfile | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    if (!login) return;

    const loadUser = async () => {
      try {
        const userData = await fetchUserProfile(login);
        if (!userData) throw new Error("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω");
        setUser(userData);
      } catch (err: any) {
        setError(err.message || "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è");
      } finally {
        setLoading(false);
      }
    };

    loadUser();
  }, [login]);

  if (loading) return <p className={styles.loading}>‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è...</p>;
  if (error) return <p className={styles.error}>‚ùå {error}</p>;

  return (
    <div className={styles.profileContainer}>
      <h1 className={styles.profileTitle}>üë§ –ü—Ä–æ—Ñ–∏–ª—å {user?.userLogin}</h1>
      <p><strong>Email:</strong> {user?.userEmail}</p>

      <h2 className={styles.messagesTitle}>üí¨ –°–æ–æ–±—â–µ–Ω–∏—è:</h2>
      {user?.messages.length ? (
        <ul className={styles.messagesList}>
          {user.messages.map((msg) => (
            <li key={msg.id} className={styles.messageItem}>
              {msg.text}
            </li>
          ))}
        </ul>
      ) : (
        <p className={styles.noMessages}>üò∂ –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π</p>
      )}
    </div>
  );
};

export default UserPage;
