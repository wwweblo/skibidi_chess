import { Server } from "socket.io";
import http from "http";
import express from "express";
import jwt, { JwtPayload } from "jsonwebtoken";
import { PrismaClient } from "@prisma/client";

const prisma = new PrismaClient();
const app = express();
const server = http.createServer(app);
const io = new Server(server, {
  cors: { origin: "http://localhost:3000", credentials: true },
});

// –•—Ä–∞–Ω–∏–º —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const activeUsers = new Set<string>();

io.use((socket, next) => {
  const token = socket.handshake.auth?.token;

  console.log("üîç WebSocket: –ü–æ–ª—É—á–µ–Ω —Ç–æ–∫–µ–Ω:", token);
  if (!token) return next(new Error("Unauthorized"));

  try {
    const decoded = jwt.verify(token, process.env.JWT_SECRET || "your_secret_key") as JwtPayload;
    console.log("üîë WebSocket: –î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω:", decoded);

    if (!decoded.userLogin) return next(new Error("Unauthorized"));

    socket.data.user = decoded.userLogin;
    next();
  } catch (error) {
    console.error("‚ùå WebSocket: –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–∞", error);
    next(new Error("Unauthorized"));
  }
});

io.on("connection", (socket) => {
  const userLogin = socket.data.user;

  if (activeUsers.has(userLogin)) {
    console.warn(`‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø–æ–¥–∫–ª—é—á–µ–Ω: ${userLogin}`);
    socket.disconnect(); // ‚ùå –û—Ç–∫–ª—é—á–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    return;
  }

  activeUsers.add(userLogin);
  console.log("‚úÖ WebSocket: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–∫–ª—é—á–µ–Ω:", userLogin);
  console.log("üë• –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:", Array.from(activeUsers));

  socket.on("disconnect", () => {
    activeUsers.delete(userLogin);
    console.log("‚ùå WebSocket: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–ª—é—á–∏–ª—Å—è:", userLogin);
    console.log("üë• –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ—Å–ª–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è:", Array.from(activeUsers));
  });
});

server.listen(3001, () => console.log("üöÄ WebSocket —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3001"));
