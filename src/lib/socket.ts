import { io, Socket } from "socket.io-client";
import { fetchUser } from "@/lib/authApi";

let socket: Socket | null = null;

export const connectSocket = async (): Promise<Socket | null> => {
  try {
    if (socket) return socket; // ‚úÖ –ï—Å–ª–∏ —É–∂–µ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã, –Ω–µ –ø–æ–¥–∫–ª—é—á–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω–æ

    const user = await fetchUser();
    if (!user || !user.token) throw new Error("‚ùå –û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ç–æ–∫–µ–Ω");

    console.log("üì° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ WebSocket —Å —Ç–æ–∫–µ–Ω–æ–º:", user.token); // ‚úÖ –õ–æ–≥–∏—Ä—É–µ–º –ø–µ—Ä–µ–¥ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º

    socket = io("http://localhost:3001", {
      auth: { token: user.token }, // ‚úÖ –ü–µ—Ä–µ–¥–∞–µ–º —Ç–æ–∫–µ–Ω –≤ WebSocket
      withCredentials: true, // ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º cookies
    });

    socket.on("connect", () => console.log("‚úÖ WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω:", socket?.id));
    socket.on("disconnect", () => console.log("‚ùå WebSocket –æ—Ç–∫–ª—é—á–µ–Ω"));

    return socket;
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è WebSocket:", error);
    return null;
  }
};
